---
import { titleCva } from "@/lib/cvas";
import { Icon } from "astro-icon/components";
import classNames from "classnames";
import Status from "../status.astro";
import Button from "../ui/button.astro";
import InfoCard from "./info-card.astro";

interface Props {
  data: {
    subTitle?: string;
    title: string;
    titleSize?: "sm" | "md" | "lg";
    description: string;
    buttonTitle?: string;
    url?: string;
    cards: {
      image: string;
      title: string;
      description: string;
      normal?: boolean;
    }[];
    tag?: "Active" | "Completed" | "Coming Soon";
  };

  grid?: boolean;
  id?: string;
  className?: string;
}

const { data, grid, id, className } = Astro.props;
---

<section
  id={id}
  class={classNames("not-prose flex flex-col gap-20 py-5 md:py-10", className)}
>
  <div class="flex flex-col">
    {
      data?.subTitle && (
        <small class="text-light mb-2 font-os text-xs uppercase tracking-wide lg:text-sm">
          {data.subTitle}
        </small>
      )
    }
    <div class="flex items-start gap-4">
      <h1
        class={titleCva({
          size: data?.titleSize ?? "lg",
        })}
      >
        {data.title}
      </h1>
      <Status type={data?.tag} />
    </div>
    <p class="mb-6 mt-3 max-w-2xl text-sm text-zinc-700 lg:text-base">
      {data.description}
    </p>
    {
      data?.url && (
        <Button href={data.url}>
          {data.buttonTitle ?? "View in Docs"}
          <Icon name="arrow-circle" class="ml-2 -rotate-45" />
        </Button>
      )
    }
  </div>
  <ul
    class={classNames(
      "grid  gap-4 md:gap-8  lg:gap-6",
      grid ? "lg:grid-cols-3" : "lg:grid-cols-4",
      data?.cards?.[0]?.normal ? "md:grid-cols-2" : "grid-cols-2",
    )}
  >
    {data.cards.map((item) => <InfoCard {...item} />)}
  </ul>
</section>
